library(tidyverse)
library(sf)
library(tmap)
#### Loading and subsetting ####
electorates <- st_read("raw_data/AEC_2019_superseded/COM_ELB_region.shp")
species <-  st_read("raw_data/EPBC_Listed_Species_100m_MW.gdb")
outline <- st_read("raw_data/aus_outline_nsaasr9nnd_02211a04es_geo/aust_cd66states.shp")
species.sl <- slice_sample(species, n = 50000) %>%
select(c("CURRENT_NAME", "COMMON_NAME", "THREATENED_STATUS", "AREA_HA", "SHAPE"))
electorates.ss <- select(electorates, -c("Numccds", "Actual", "Projected",
"Total_Popu", "Australian", "Sortname"))
elect.spec <- st_join(electorates.ss, species.sl, join = st_intersects) %>%
select(-geometry)
head(elect.spec)
names(elect.spec)
elect.spec <- select(!geometry)
elect.spec <- select(!geometry)
?select
elect.spec <- select(elect.spec, !geometry)
names(elect.spec)
elect.spec <- select(elect.spec, -geometry)
names(elect.spec)
elect.spec <- select(elect.spec, Elect_div:AREA_HA)
names(elect.spec)
elect.spec.exp <- dplyr::select(as.data.frame(sf), -geometry)
elect.spec.exp <- dplyr::select(as.data.frame(elect.spec), -geometry)
View(elect.spec.exp)
elect.spec.ng <- dplyr::select(as.data.frame(elect.spec), -geometry)
write.csv(elect.spec.ng, file = "analysed_data/elect_spec.csv")
?st_geometry
elect.spec.ng <- st_geometry(elect.spec) <- NULL
st_geometry(elect.spec) <- NULL
class(elect.spec)
View(elect.spec)
rm(elect.spec.exp, elect.spec.ng)
View(elect.spec)
?count
?summarise
?count
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
summarise(no_within = count(CURRENT_NAME))
elect.spec.exp <- elect.spec %>%
group_by(Elect_div)
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
summarise(no_within = n(CURRENT_NAME))
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
summarise(CURRENT_NAME = n(CURRENT_NAME))
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
summarise(n = n(CURRENT_NAME))
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
summarise(n = n())
View(elect.spec.exp)
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
summarise(n = n_distinct())
View(elect.spec.exp)
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
summarise(n = n())
elect.spec.exp <- elect.spec %>%
group_by(Elect_div, CURRENT_NAME) %>%
summarise(n = n())
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
summarise(n = n())
View(species.sl)
distinct(species.sl, THREATENED_STATUS)
View(species.sl)
distinct(elect.spec, THREATENED_STATUS)
count(species.sl$THREATENED_STATUS)
?unique
unique(species.sl$THREATENED_STATUS)
count(unique(species.sl$THREATENED_STATUS))
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
summarise(no = n())
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
summarise(n = n_distinct())
elect.spec.exp <- elect.spec %>%
group_by(Elect_div, COMMON_NAME) %>%
summarise(n = n_distinct())
?distinct_n
??distinct_n
?n_distinct
elect.spec.exp <- elect.spec %>%
group_by(Elect_div, COMMON_NAME) %>%
summarise(n = n())
View(elect.spec)
elect.spec.exp <- elect.spec %>%
group_by(Elect_div, COMMON_NAME) %>%
summarise(mutate(n = n()))
elect.spec.exp <- elect.spec %>%
group_by(Elect_div, COMMON_NAME) %>%
summarise(n = n_distinct(COMMON_NAME))
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
summarise(n = n_distinct(COMMON_NAME))
?slice
?filter
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
filter(n == n_distinct(COMMON_NAME))
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
filter(State == n_distinct(COMMON_NAME))
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
filter(State == n(COMMON_NAME))
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
mutate(n = n_distinct(COMMON_NAME))
elect.spec.exp <- elect.spec %>%
group_by(Elect_div) %>%
mutate(total_unique = n_distinct(COMMON_NAME))
elect.summary.tbl <- elect.spec %>%
group_by(Elect_div) %>%
summarise(total_unique = n_distinct(COMMON_NAME))
View(elect.summary.tbl)
elect.spec <- elect.spec %>%
group_by(CURRENT_NAME) %>%
mutate(total_unique_elect = n_distinct(Elect_div))
elect.spec <- st_join(electorates.ss, species.sl, join = st_intersects)
st_geometry(elect.spec) <- NULL
elect.spec.uniq.elect <- elect.spec %>%
group_by(CURRENT_NAME) %>%
mutate(total_unique_elect = n_distinct(Elect_div))
View(elect.spec.uniq.elect)
?aggregate
?merge
?lapply
# Isolated table of no of species per electorate
elect.spec.uniq.elect.tbl <- elect.spec %>%
group_by(CURRENT_NAME) %>%
summarise(total_unique_elect = n_distinct(Elect_div))
View(elect.spec.uniq.elect.tbl)
# Add a column of no of species per electorate
elect.spec.uniq.spec <- elect.spec %>%
group_by(Elect_div) %>%
mutate(total_unique_spec = n_distinct(CURRENT_NAME))
# Isolated table of no of species per electorate
elect.spec.uniq.spec.tbl <- elect.spec %>%
group_by(Elect_div) %>%
summarise(total_unique_spec = n_distinct(CURRENT_NAME))
#### Count electorates on no of species within them ####
elect.spec.uniq.elect <- elect.spec %>%
group_by(CURRENT_NAME) %>%
mutate(total_unique_elect = n_distinct(Elect_div))
# Isolated table of no of species per electorate
elect.spec.uniq.elect.tbl <- elect.spec %>%
group_by(CURRENT_NAME) %>%
summarise(total_unique_elect = n_distinct(Elect_div))
rm(elect.summary.tbl)
rm(outline)
View(elect.spec.uniq.spec)
View(elect.spec.uniq.elect)
library(tidyverse)
library(sf)
library(tmap)
#### Loading and subsetting ####
electorates <- st_read("raw_data/AEC_2019_superseded/COM_ELB_region.shp")
species <-  st_read("raw_data/EPBC_Listed_Species_100m_MW.gdb")
outline <- st_read("raw_data/aus_outline_nsaasr9nnd_02211a04es_geo/aust_cd66states.shp")
species.sl <- slice_sample(species, n = 50000) %>%
select(c("CURRENT_NAME", "COMMON_NAME", "THREATENED_STATUS", "AREA_HA", "SHAPE"))
electorates.ss <- select(electorates, -c("Numccds", "Actual", "Projected",
"Total_Popu", "Australian", "Sortname"))
elect.spec <- st_join(electorates.ss, species.sl, join = st_intersects)
st_geometry(elect.spec) <- NULL
# Check CRS's are the same
st_crs(electorates) == st_crs(species)
# Check valid polygons?
st_is_valid(electorates)
# Check valid polygons?
st_is_valid(species)
st_is_valid(electorates.ss)
# Check valid polygons?
st_is_valid(species.sl)
species.sl.exp <- st_buffer(species.sl, 0.0)
# Check valid polygons?
species.sl.exp <- st_make_valid(species.sl)
# Make valid? Wtf does this mean?
species.sl <- st_make_valid(species.sl)
electorates.ss <- st_make_valid(electorates.ss)
elect.spec <- st_join(electorates.ss, species.sl, join = st_intersects)
st_geometry(elect.spec) <- NULL
View(elect.spec)
rm(outline, elect.spec)
rm(species.sl.exp)
disjoint <- st_join(electorates.ss, species.sl, join = st_disjoint)
head(disjoint)
rm(disjoint)
intersect <- st_join(electorates.ss, species.sl, join = st_intersects)
?st_join
head(species.sl)
head(electorates.ss)
disjoint <- st_join(species.sl, electorates.ss, join = st_disjoint, left = TRUE)
disjoint <- st_join(electorates.ss, species.sl, join = st_disjoint, left = TRUE)
rm(disjoint)
contains <- st_join(electorates.ss, species.sl, join = st_contains)
head(contains)
st_geometry(contains) <- NULL
View(contains)
library(tidyverse)
library(sf)
library(tmap)
#### Loading and subsetting ####
electorates <- st_read("raw_data/AEC_2019_superseded/COM_ELB_region.shp")
species <-  st_read("raw_data/EPBC_Listed_Species_100m_MW.gdb")
# outline <- st_read("raw_data/aus_outline_nsaasr9nnd_02211a04es_geo/aust_cd66states.shp")
species.sl <- slice_sample(species, n = 10000) %>%
select(c("CURRENT_NAME", "COMMON_NAME", "THREATENED_STATUS", "AREA_HA", "SHAPE"))
electorates.ss <- select(electorates, -c("Numccds", "Actual", "Projected",
"Total_Popu", "Australian", "Sortname"))
intersection <- st_join(species.sl, electorates.ss, join = st_intersection)
species.sl <- st_make_valid(species.sl)
electorates.ss <- st_make_valid(electorates.ss)
intersection <- st_join(species.sl, electorates.ss, join = st_intersection)
library(tidyverse)
library(sf)
library(tmap)
#### Loading and subsetting ####
electorates <- st_read("raw_data/AEC_2019_superseded/COM_ELB_region.shp")
species <-  st_read("raw_data/EPBC_Listed_Species_100m_MW.gdb")
# outline <- st_read("raw_data/aus_outline_nsaasr9nnd_02211a04es_geo/aust_cd66states.shp")
species.sl <- slice_sample(species, n = 100) %>%
select(c("CURRENT_NAME", "COMMON_NAME", "THREATENED_STATUS", "AREA_HA", "SHAPE"))
electorates.ss <- select(electorates, -c("Numccds", "Actual", "Projected",
"Total_Popu", "Australian", "Sortname"))
# Check CRS's are the same
st_crs(electorates) == st_crs(species)
species.sl <- st_make_valid(species.sl)
electorates.ss <- st_make_valid(electorates.ss)
intersection <- st_join(species.sl, electorates.ss, join = st_intersection)
library(sf)
species <-  st_read("raw_data/SNES_public_1july2021.gdb")
View(species)
st_geometry(species) <- NULL
View(species)
electorates <- st_read("raw_data/AEC_2019_superseded/COM_ELB_region.shp")
species <-  st_read("raw_data/SNES_public_1july2021.gdb")
# Check CRS's are the same
st_crs(electorates) == st_crs(species)
head(species)
names(species)
View(species)
head(species)
names(species)
species.sl <- slice_sample(species, n = 1000) %>%
select(c("SCIENTIFIC_NAME", "VERNACULAR_NAME", "THREATENED_STATUS", "Shape_Area", "Shape"))
library(tidyverse)
library(sf)
species.sl <- slice_sample(species, n = 1000) %>%
select(c("SCIENTIFIC_NAME", "VERNACULAR_NAME", "THREATENED_STATUS", "Shape_Area", "Shape"))
electorates.ss <- select(electorates, -c("Numccds", "Actual", "Projected",
"Total_Popu", "Australian", "Sortname"))
species.sl <- st_make_valid(species.sl)
electorates.ss <- st_make_valid(electorates.ss)
intersection <- st_join(species.sl, electorates.ss, join = st_intersection)
View(electorates.ss)
View(electorates)
View(electorates.ss)
names(electorates)
names(species)
head(species)
species.sl <- slice_sample(species, n = 25) %>%
select(c("SCIENTIFIC_NAME", "Shape")) %>%
rename(rain = SCIENTIFIC_NAME, geometry = Shape)
electorates.ss <- slice_sample(electorates, n = 25) %>%
select(c("Elect_div", "geometry")) %>%
rename(field = Elect_div)
View(electorates.ss)
species.sl <- slice_sample(species, n = 25) %>%
select(c("SCIENTIFIC_NAME", "Shape")) %>%
rename(rain = SCIENTIFIC_NAME, geometry = Shape) %>%
st_make_valid()
electorates.ss <- slice_sample(electorates, n = 25) %>%
select(c("Elect_div", "geometry")) %>%
rename(field = Elect_div) %>%
st_make_valid()
intersection <- st_intersection(species.sl, electorates.ss)
?st_join
library(tidyverse)
library(sf)
library(tmap)
#### Loading and subsetting ####
electorates <- st_read("raw_data/AEC_2019_superseded/COM_ELB_region.shp")
species <-  st_read("raw_data/SNES_public_1july2021.gdb")
# outline <- st_read("raw_data/aus_outline_nsaasr9nnd_02211a04es_geo/aust_cd66states.shp")
species.sl <- slice_sample(species, n = 500) %>%
select(c("SCIENTIFIC_NAME", "VERNACULAR_NAME", "THREATENED_STATUS", "Shape_Area", "Shape"))
electorates.ss <- select(electorates, -c("Numccds", "Actual", "Projected",
"Total_Popu", "Australian", "Sortname"))
# Check CRS's are the same
st_crs(electorates) == st_crs(species)
# Make valid? Wtf does this mean? https://r-spatial.org/r/2017/03/19/invalid.html
species.sl <- st_make_valid(species.sl)
electorates.ss <- st_make_valid(electorates.ss)
# Intersection join
intersection <- st_intersection(electorates.ss, species.sl)
intersection.swap <- st_intersection(species.sl, electorates.ss)
# Make valid again?
intersection <- st_make_valid(intersection)
# Calculate area of intersection-al polygons (i.e. individual species' range
# within each of their electorates
# Total area of each species within each electorate?
intersection.calcarea <- intersection %>%
mutate(area = st_area(.) %>% as.numeric()) %>%
as_tibble() %>%
group_by(Elect_div, SCIENTIFIC_NAME) %>%
summarise(area = sum(area))
st_geometry(intersection.calcarea) <- NULL
intersection <- st_intersection(electorates.ss, species.sl)
intersection.swap <- st_intersection(species.sl, electorates.ss)
library(dplyr)
library(sf)
?sf_use_s2
?st_make_grid
species <- st_read("raw_data/SNES_public_1july2021.gdb")
# Make valid? Wtf does this mean? https://r-spatial.org/r/2017/03/19/invalid.html
species <- st_make_valid(species)
table((st_is_valid(species)))
species.exp <- st_make_valid(species, sf_use_s2(FALSE))
table((st_is_valid(species.exp)))
sf_use_s2(FALSE)
species.exp <- st_make_valid(species)
table((st_is_valid(species.exp)))
join.intersect <- st_read("analysed_data/intersect.gpkg")
library(sf)
join.intersect <- st_read("analysed_data/intersect.gpkg")
